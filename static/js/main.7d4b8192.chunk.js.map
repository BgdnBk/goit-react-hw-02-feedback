{"version":3,"sources":["componensts/Section/Section.module.css","componensts/Statistics/Statistics.module.css","componensts/FeedbackOptions/FeedBackOptions.module.css","componensts/Section/Section.js","componensts/FeedbackOptions/FeedBackOptions.js","componensts/Notification/Notification.js","componensts/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedBackOptions","options","onLeaveFeedback","optionsMap","Object","keys","map","item","ind","name","type","onClick","button","Math","random","Nottification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","onHandleClick","e","currentTarget","setState","prevState","console","log","countTotalFeedback","countPositiveFeedbackPercentage","round","this","Component","defaultProps","initialValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,mBAAqB,yC,oBCAzED,EAAOC,QAAU,CAAC,OAAS,kC,uLCGZ,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACtC,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCAQ,SAASI,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC1CC,EAAaC,OAAOC,KAAKJ,GAC/B,OACE,8BACGE,EAAWG,KAAI,SAACC,EAAMC,GAAP,OACd,wBAEEC,KAAMF,EACNG,KAAK,SACLC,QAAST,EACTL,UAAWC,IAAEc,OALf,SAOG,CAAC,uCAAU,+DAAc,kCAASJ,IAN9BK,KAAKC,OAAO,SCPZ,SAASC,EAAT,GAAmC,IAAXC,EAAU,EAAVA,QACrC,OACE,gCACE,8BAAM,6BAAKA,MADb,O,oBCNW,SAASC,EAAT,GAAuE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7D,OACE,8BACGJ,GAAQC,GAAmB,IAARC,EAClB,+BACE,+BACE,sBAAMvB,UAAWqB,EAAjB,kDADF,KACyCA,KAEzC,+BACE,sBAAMrB,UAAWsB,EAAjB,0EADF,KACgDA,KAEhD,+BACE,sBAAMtB,UAAWuB,EAAjB,4CADF,KACuCA,KAEvC,qBAAIvB,UAAWC,IAAEuB,MAAjB,sJAAoDA,EAApD,OACA,qBAAIxB,UAAWC,IAAEwB,mBAAjB,oGACoBA,EADpB,IACyC,UAI3C,cAAC,EAAD,CAAcN,QAAQ,8G,UCjBTO,E,4MAKnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,SAACC,GAAO,IACdjB,EAASiB,EAAEC,cAAXlB,KAER,EAAKmB,UAAS,SAAAC,GAEZ,OADAC,QAAQC,IAAIF,GACL,eACJpB,EAAOoB,EAAUpB,GAAQ,O,EAKhCuB,mBAAqB,WACnB,OAAO,EAAKR,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3Da,gCAAkC,WAChC,OAAOpB,KAAKqB,MAAyB,IAAlB,EAAKV,MAAMN,KAAc,EAAKc,uB,uDAIhD,OACC,sBAAKnC,UAAU,MAAf,UACG,cAACH,EAAD,CAASC,MAAM,kKAAf,SACE,cAACK,EAAD,CAAiBC,QAASkC,KAAKX,MAAOtB,gBAAiBiC,KAAKV,kBAE/D,cAAC/B,EAAD,CAASC,MAAM,+DAAf,SACG,cAACsB,EAAD,CACEC,KAAMiB,KAAKX,MAAMN,KACjBC,QAASgB,KAAKX,MAAML,QACpBC,IAAKe,KAAKX,MAAMJ,IAChBC,MAAOc,KAAKH,qBACZV,mBAAoBa,KAAKF,6C,GA1CLG,aAAZb,EACbc,aAAe,CACnBC,aAAc,GCRlB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d4b8192.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__rS0t_\",\"title\":\"Section_title__3fJZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Statistics_total__3xPBP\",\"positivePercentage\":\"Statistics_positivePercentage__2631Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedBackOptions_button__2JrDC\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"../Section/Section.module.css\";\r\n\r\nexport default function Section({title, children}) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../FeedbackOptions/FeedBackOptions.module.css'\r\n\r\nFeedBackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function FeedBackOptions({options, onLeaveFeedback}) {\r\n  const optionsMap = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {optionsMap.map((item, ind) => (\r\n        <button\r\n          key={Math.random(3)}\r\n          name={item}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          className={s.button}\r\n        >\r\n          {[\"Хорошо\", \"Нейтрально\", \"Плохо\"][ind]}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNottification.propTypes = {\r\n   message: PropTypes.string,\r\n};\r\n\r\nexport default function Nottification({message}) {\r\n  return (\r\n    <div>\r\n      <div>{<h2>{message}</h2>}</div>;      \r\n    </div>\r\n  );\r\n}\r\n\r\n ","import React from 'react';\r\nimport Notification from '../Notification/Notification'\r\nimport s from \"../Statistics/Statistics.module.css\";\r\nexport default function Statistics({good, neutral, bad, total, positivePercentage,}) {\r\n  return (\r\n    <div>\r\n      {good || neutral || bad !== 0 ? (\r\n        <ul>\r\n          <li>\r\n            <span className={good}>Хорошо</span>: {good}\r\n          </li>\r\n          <li>\r\n            <span className={neutral}>Нейтрально</span>: {neutral}\r\n          </li>\r\n          <li>\r\n            <span className={bad}>Плохо</span>: {bad}\r\n          </li>\r\n          <li className={s.total}> Общее количество отзывов: {total} </li>\r\n          <li className={s.positivePercentage}>\r\n            Хороших Отзывов: {positivePercentage}%{\" \"}\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"Отзывы отсутствуют\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport Section from './componensts/Section/Section'\nimport FeedBackOptions from './componensts/FeedbackOptions/FeedBackOptions'\nimport Statistics from './componensts/Statistics/Statistics'\nimport './App.css';\n\nexport default class App extends Component {\n static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n}\n\n  onHandleClick = (e) => { \n    const { name } = e.currentTarget;\n    \n    this.setState(prevState => { \n      console.log(prevState)\n      return {\n        [name]: prevState[name] + 1,\n      }\n    })\n  }\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  \n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback())\n  };\n  \n  render() { \n     return (\n      <div className=\"App\">   \n         <Section title='Пожалуйста оставьте ваш отзыв' >  \n           <FeedBackOptions options={this.state} onLeaveFeedback={this.onHandleClick} />\n         </Section>\n        <Section title='Статистика' >  \n           <Statistics\n             good={this.state.good}\n             neutral={this.state.neutral}\n             bad={this.state.bad}\n             total={this.countTotalFeedback()}\n             positivePercentage={this.countPositiveFeedbackPercentage()} />\n         </Section> \n    </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}